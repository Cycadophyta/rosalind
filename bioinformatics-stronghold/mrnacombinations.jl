"""
Inferring mRNA from Protein

    mrnacombinations(seq::String, modval::Int=10^6) -> Int 

# Arguments
- `seq::String`: a protein string of length at most 1000 aa.
- `modval::Int=10^6`: modulo value for large integer compression.
Defaults to 10^6.

# Returns 
`Int`: the total number of different RNA strings from which the protein could have been translated, modulo `modval`. 

(Don't neglect the importance of the stop codon in protein translation.)
"""
function mrnacombinations(seq::String, modval::Int=10^6)
    counts = 1
    codons = Dict(
        'A' => 4, 'B' => 4, 'C' => 2, 'D' => 2,
        'E' => 2, 'F' => 2, 'G' => 4, 'H' => 2,
        'I' => 3, 'K' => 2, 'L' => 6, 'M' => 1,
        'N' => 2, 'P' => 4, 'Q' => 2, 'R' => 6,
        'S' => 6, 'T' => 4, 'V' => 4, 'W' => 1,
        'Y' => 2, 'Z' => 4, "STOP" => 3
    )
    for base in seq
        counts = (counts * codons[base]) % modval
    end
    counts = (counts * 3) % modval  # Include stop codon
    return counts
end

println(mrnacombinations("MKDEDQPCLLVQTTSWHPQQPDKEGCAYCHILKRQTFDGMDMIRTDQSSGIHMWPAFIDHVHHDLIHMVCCCSDSSCRRIVETNASHLWIRGKDDLRVFMISHSLRSPYKEDKCDRREDVGKMAYNHEWLETVFPPDVTPANNDFGAVTRMSVHNLISGEEWPAFAWETQPVTHEVQESHEFLCMVQWKTYYKTQHTMIQWIICEVNKKMTMPGYCSISLYCHMYVDESFDNDREHTNCHPSVFDWSNKNDVGDQGWDNAYLRHQQSNISRARCEWASWGIMGKHALNGTFRLELVKYFKFRAAASCEFVEVRSKMFSYYGAWFLLLGYNRPETPMHIHPGKDYICEKQAGFNCVDFQMMGDCVFAYRYEDSLPDIFRYVIRDLFSVNKELMMECDCEAMHRSNHQFHAAWAQARDMIDRIPFYMTWIRWRSDNITGLTCIHRFVHNFNNYSAMHLEPSECEVIGLEPRCNEHIVHMAVGTDDSTHMFDFGFFRDYWHFAVIAHTHIGYPWEIYSIFCRIIYFIYHLPRQYDQTCGLNMRFYFCPFTAVCKGHQVCTRICSLDIRMAQSTISFGMWGWHVDGLKKHDCREENPAWGGLYFKCGGMGEKYVNIGAAIFKIYAFRWLIRGYERSWWGSVAIKGIYWQDSLMEAKWKKNSWQKACNGVDWWPVQDGAMAAMKIKIYEFMFDRKTYQPINEGSVVSICWANTYPPWCPVQTAYQDYCRCLAGVNGKVQVVVSPLEMKMIDGLNHCDYEVRQQSDNNAVLYFTYGHKKADWLGIHVESNRASMPKCNKHIGKQNVPHERSWEIFEPNLMPHGWPRKHLCKLWFDQSAIGGYMWYRCNRKNFDWFMYHKAMIWMGAVTVWWTPPCPQYIYSNCINSIDEVYTGTDRCPCTLVARPHWAAHYAMFFWMMHKQEEIRREGMESMEVEWHSDMCFNWVTMYRCATGPIDSCRSMGNVTQICRAHDKQLKLIDLMAWNDVAPDMRKFFEHCVPAMCWRN"))